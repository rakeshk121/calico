name: Calico CI
on:
  workflow_dispatch:
jobs:
  script:
    runs-on: self-hosted
    name: Build Calico images 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Installing make
        run: sudo apt install make -y
        
      - name: Run make command
        run: make image DEV_REGISTRY=my-registry IMAGETAG=coredge REGISTRY-BUILD_IMAGE-IMAGETAG=coredge

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Pushing  Docker images to Dockerhub
        shell: bash
        env: 
           docker_pass: ${{secrets.DOCKERHUB_PUSH_TOKEN}}
           docker_user: ${{secrets.DOCKERHUB_USER}}
           DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{secrets.DCT_PASSPHRASE}}
           image_version: v${{ github.event.inputs.VERSION }}-ckp
           docker_image_version: v${{ github.event.inputs.VERSION }}${{ env.IMAGE_RELEASE_TAG }}
        run: |
          docker login -u $docker_user -p $docker_pass


          # Scan the images for vulnerabilities
          images=($(docker images | grep 'calico' | awk '{print $1 ":" $2}')) # Define your list of images with 'calico' in their names
          # Replace / and : with _
          for image in "${images[@]}"; do
              sanitized_image=$(echo $image | tr '/:' '_')
              echo "Scanning image: $image"
              docker run --rm -v $(pwd):/workdir aquasec/trivy:latest image --severity HIGH,CRITICAL,MEDIUM,LOW --format template --template "@/contrib/html.tpl" --output "/workdir/trivy
              

          # Push the docker images 
          docker images | grep 'calico' | awk '{print $1 ":" $2}' | xargs -L1 docker push

      - name: Upload Trivy Scan Results
        uses: actions/upload-artifact@v3
        with:
          name: Trivy Scan Reports
          path: trivy_scan_results.html           
